events {}

http {
    resolver 127.0.0.11;

    server {
        listen 0.0.0.0:80;
        listen [::]:80;
        server_name vaultwarden.${DOMAIN};
        return 301 https://${env}host${env}request_uri;
    }

    server {
        listen 0.0.0.0:443 ssl;
        listen [::]:443 ssl;
        server_name vaultwarden.${DOMAIN};
        
        ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

        location / {
            proxy_pass http://vaultwarden_server;
            proxy_set_header Host ${env}host;
            proxy_set_header X-Real-IP ${env}remote_addr;
            proxy_set_header X-Forwarded-For ${env}proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 404;
    }

    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name _;

        ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

        return 404;
    }

}    

# For minecraft servers
stream { 
    upstream minecraft_server {
        server minecraft_proxy:25565;
    }

    server {
        listen 25565;
        listen [::]:25565;
        proxy_pass minecraft_server;
    }
}